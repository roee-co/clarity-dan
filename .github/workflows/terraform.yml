name: Terraform Pipeline

on:
  push:
    paths-ignore: [ "src/**", "ocs/**", "README.md" ]
    branches: [ "main" ]
  pull_request:
    paths-ignore: [ "src/**", "ocs/**", "README.md" ]
    branches: [ "main", "develop" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  AWS_REGION:               eu-central-1
  TF_VERSION:               1.5.7  # Updated to latest version
  TF_VAR_image_tag:         test-02
  TF_VAR_region:            eu-central-1
  TF_VAR_cluster_name:      ${{ secrets.TF_VAR_CLUSTER_NAME }}
  TF_VAR_project_name:      ${{ secrets.TF_VAR_PROJECT_NAME }}
  TF_VAR_org_id:            ${{ secrets.TF_VAR_ORG_ID }}
  TF_VAR_ip_address:        ${{ secrets.TF_VAR_IP_ADDRESS }}
  TF_VAR_project_id:        ${{ secrets.TF_VAR_PROJECT_ID }}
  TF_VAR_db_user:           ${{ secrets.TF_VAR_DB_USER }}
  TF_VAR_db_password:       ${{ secrets.TF_VAR_DB_PASSWORD }}
  TF_VAR_database_name:     ${{ secrets.TF_VAR_DATABASE_NAME }}
  TF_VAR_lambda_role_name:  ${{ secrets.TF_VAR_LAMBDA_ROLE_NAME }}
  TF_VAR_mongo_private_key: ${{ secrets.TF_VAR_MONGO_PRIVATE_KEY }}
  TF_VAR_mongo_public_key:  ${{ secrets.TF_VAR_MONGO_PUBLIC_KEY }}
  TF_VAR_connection_string: ${{ secrets.TF_VAR_CONNECTION_STRING }}

jobs:
  terraform:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.7

    - name: Clean Terraform Cache
      run: rm -rf .terraform* terraform.tfstate*

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1  # Change to your region

    - name: Terraform Init
      run: terraform init -reconfigure

    - name: Terraform Validate
      run: terraform validate
  
    - name: Get Public IP
      id: get_ip
      run: echo "IP=$(curl -s https://api64.ipify.org)" >> $GITHUB_ENV

    - name: Add IP to MongoDB Atlas
      run: |
        curl -X POST "https://cloud.mongodb.com/api/atlas/v1.0/groups/${{ secrets.TF_VAR_PROJECT_ID }}/accessList" \
          -u "${{ secrets.TF_VAR_MONGO_PUBLIC_KEY }}:${{ secrets.TF_VAR_MONGO_PRIVATE_KEY }}" \
          -H "Content-Type: application/json" \
          --data '{ "ipAddress": "'"${{ env.IP }}"'","comment": "GitHub Action Runner"}'

    - name: Terraform Plan
      run: terraform plan
      
    - name: Deploy to Production
      if: github.ref == 'refs/heads/main'
      run: terraform apply -auto-approve
